"""
Generate a mitmproxy dump file.

This script demonstrates how to generate a mitmproxy dump file,
as it would also be generated by passing `-w` to mitmproxy.
In contrast to `-w`, this gives you full control over which
flows should be saved and also allows you to rotate files or log
to multiple files in parallel.
"""
"""
Read a mitmproxy dump file.
"""

from typing import BinaryIO
from mitmproxy import io, http
from mitmproxy.exceptions import FlowReadException
import pprint
import sys

FLOW_CACHE = set()
path = "dumps.data"


class GysoHooksIO:
    def __init__(self) -> None:
        self.f: BinaryIO = open(path, "wb")
        self.w = io.FlowWriter(self.f)

    def response(self, flow: http.HTTPFlow) -> None:
        print(str(flow))
        FLOW_CACHE.add(flow)

    def dumps_as_to_file(self):
        for flow in FLOW_CACHE:
            self.w.add(flow)

    def load_file(self):
        with open(path, "rb") as logfile:
            freader = io.FlowReader(logfile)
            pp = pprint.PrettyPrinter(indent=4)
            try:
                for f in freader.stream():
                    print(f)
                    if isinstance(f, http.HTTPFlow):
                        print(f.request.host)
                    pp.pprint(f.get_state())
                    print("")
            except FlowReadException as e:
                print(f"Flow file corrupted: {e}")

    def clear_cache(self):
        FLOW_CACHE.clear()

    def done(self):
        FLOW_CACHE.clear()
        self.f.close()
